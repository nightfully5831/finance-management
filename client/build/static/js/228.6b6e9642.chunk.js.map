{"version":3,"file":"static/js/228.6b6e9642.chunk.js","mappings":"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","sources":["sections/Security/subscription/subscription.js","api/stripe.js","pages/security/subscription.js"],"sourcesContent":["import React from \"react\";\r\nimport { alpha, useTheme } from \"@mui/material/styles\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n} from \"@mui/material\";\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { toast } from \"react-toastify\";\r\nimport { useSettingsContext } from \"src/components/settings\";\r\nimport { allFeatures, plans } from \"src/utils/variable\";\r\nimport { useAuthContext } from \"src/auth/hooks\";\r\nimport {\r\n  CancelSubscription,\r\n  CreateSubscription,\r\n  UpdateSubscription,\r\n} from \"src/api/stripe\";\r\n\r\nconst Subscription = () => {\r\n  const settings = useSettingsContext();\r\n  const theme = useTheme();\r\n  const { user, setSubscription } = useAuthContext();\r\n\r\n  const handleSubscribe = async (planType) => {\r\n    // if plan equals Free,it need create subscription, or not, it need update\r\n    if (user.subscription !== planType) {\r\n      if (!user.subscriptionID) {\r\n        const flag = window.confirm(\"Do you really Create plan?\");\r\n        if (flag) {\r\n          const response = await CreateSubscription(planType, user.email);\r\n          if (response.type === \"success\") {\r\n            toast.success(\"go next step!\", { theme: \"colored\" });\r\n            window.location.href = response.data;\r\n          } else {\r\n            toast.warn(\"Create subscripton error!\", { theme: \"colored\" });\r\n          }\r\n        }\r\n      } else if (planType === \"free\") {\r\n        const flag = window.confirm(\"Do you really cancel plan?\");\r\n        if (flag) {\r\n          const response = await CancelSubscription(\r\n            user.email,\r\n            user.subscriptionID\r\n          );\r\n          if (response.type === \"success\") {\r\n            toast.success(\"You successfully Canceled Subscription!\", {\r\n              theme: \"colored\",\r\n            });\r\n            setSubscription(\"free\", user);\r\n          } else {\r\n            toast.warn(\"Cancel Subscription error!\", { theme: \"colored\" });\r\n          }\r\n        }\r\n      } else {\r\n        const flag = window.confirm(\"Do you really Update plan?\");\r\n        if (flag) {\r\n          const response = await UpdateSubscription(\r\n            planType,\r\n            user.email,\r\n            user.subscriptionID\r\n          );\r\n          if (response.type === \"success\") {\r\n            toast.success(\"You successfully Upgraded Subscription!\", {\r\n              theme: \"colored\",\r\n            });\r\n            window.location.href = response.data;\r\n          } else {\r\n            toast.warn(\"Update subscripton error!\", { theme: \"colored\" });\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast.warn(\"This plan already choosen!\", { theme: \"colored\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : \"xl\"}>\r\n      <Box\r\n        sx={{\r\n          borderRadius: 2,\r\n          height: \"100%\",\r\n          bgcolor: (themes) => alpha(themes.palette.grey[500], 0.04),\r\n          border: (themes) => `dashed 1px ${themes.palette.divider}`,\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            minHeight: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            textAlign: \"center\",\r\n            p: 5,\r\n          }}\r\n        >\r\n          <Typography variant=\"h2\" sx={{ mb: 4 }}>\r\n            SUBSCRIPTIONS\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: { xs: \"1fr\", md: \"repeat(3, 1fr)\" },\r\n              gap: 4,\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            {plans.map((plan) => (\r\n              <Card\r\n                key={plan.title}\r\n                sx={{\r\n                  p: 2,\r\n                  borderRadius: \"1rem\",\r\n                  textAlign: \"center\",\r\n                  boxShadow: 3,\r\n                  bgcolor:\r\n                    user.subscription === plan.stripePlanType\r\n                      ? theme.palette.primary.dark\r\n                      : \"background.paper\",\r\n                  color:\r\n                    user.subscription === plan.stripePlanType\r\n                      ? theme.palette.primary.contrastText\r\n                      : \"inherit\",\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      flexDirection: \"column\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Box sx={{ height: 150, pb: 4 }}>\r\n                      <Typography variant=\"h2\" sx={{ mb: 2 }}>\r\n                        {plan.title}\r\n                      </Typography>\r\n                      <Typography variant=\"h4\">{plan.subtitle}</Typography>\r\n                    </Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      sx={{ borderRadius: 50, width: 150 }}\r\n                    >\r\n                      {plan.price}\r\n                    </Button>\r\n                    <Box sx={{ pt: 3 }}>\r\n                      {allFeatures.map((item, index) => (\r\n                        <Box\r\n                          key={index}\r\n                          sx={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                          }}\r\n                        >\r\n                          {plan.features.includes(item) ? (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"30\"\r\n                              height=\"30\"\r\n                              viewBox=\"0 0 20 20\"\r\n                              color={\r\n                                plan.stripePriceId === user.subscription\r\n                                  ? null\r\n                                  : `${theme.palette.primary.main}`\r\n                              }\r\n                            >\r\n                              <path\r\n                                fill=\"currentColor\"\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M11.467 3.727c.289.189.37.576.181.865l-4.25 6.5a.625.625 0 0 1-.944.12l-2.75-2.5a.625.625 0 0 1 .841-.925l2.208 2.007l3.849-5.886a.625.625 0 0 1 .865-.181\"\r\n                                clipRule=\"evenodd\"\r\n                              />\r\n                            </svg>\r\n                          ) : (\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              width=\"30\"\r\n                              height=\"30\"\r\n                              viewBox=\"0 0 25 25\"\r\n                              color={\r\n                                plan.stripePriceId === user.subscription\r\n                                  ? null\r\n                                  : `${theme.palette.primary.main}`\r\n                              }\r\n                            >\r\n                              <path\r\n                                fill=\"currentColor\"\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M5.22 4.47a.75.75 0 0 1 1.06 0L10 8.19l3.72-3.72a.75.75 0 1 1 1.06 1.06L11.06 9.25l3.72 3.72a.75.75 0 0 1-1.06 1.06L10 10.31l-3.72 3.72a.75.75 0 0 1-1.06-1.06l3.72-3.72-3.72-3.72a.75.75 0 0 1 0-1.06z\"\r\n                                clipRule=\"evenodd\"\r\n                              />\r\n                            </svg>\r\n                          )}\r\n                          <Typography sx={{ mb: 1 }} variant=\"h4\">\r\n                            {item}\r\n                          </Typography>\r\n                        </Box>\r\n                      ))}\r\n                    </Box>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"label\"\r\n                      sx={{ mt: 3 }}\r\n                      startIcon={\r\n                        <svg\r\n                          xmlns=\"http://www.w3.org/2000/svg\"\r\n                          width=\"32\"\r\n                          height=\"32\"\r\n                          viewBox=\"0 0 32 32\"\r\n                          color={`${theme.palette.primary.main}`}\r\n                        >\r\n                          <path\r\n                            fill=\"#005a92\"\r\n                            d=\"M13.4 20.7a4.81 4.81 0 0 0 1.251-6.683l-3.963 2.712a2.4 2.4 0 0 1-2.712-3.971l3.621-2.479l2.324-1.593A4.81 4.81 0 0 0 15.168 2L11.2 4.72L5.259 8.784l-.008.008A7.212 7.212 0 0 0 13.4 20.7m5.21-9.4a.1.1 0 0 0-.031.023za4.81 4.81 0 0 0-1.251 6.683l3.963-2.712a2.407 2.407 0 0 1 2.72 3.971l-3.621 2.479l-2.331 1.596A4.81 4.81 0 0 0 16.838 30l3.962-2.712l5.945-4.072A7.213 7.213 0 0 0 18.61 11.3\"\r\n                          />\r\n                        </svg>\r\n                      }\r\n                      onClick={() => handleSubscribe(plan.stripePlanType)}\r\n                    >\r\n                      Subscribe\r\n                    </Button>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n","import axios, { endpoints } from 'src/utils/axios';\r\n\r\nexport const CreateSubscription = async (id,gmail) => {\r\n    const data = {planType:id, email:gmail}\r\n    try {\r\n      let result = {type:'', data: {}}\r\n      await axios.post(endpoints.subscription.create, data)\r\n              .then(res => {result = {type:'success', data:res.data.url}})\r\n              .catch(err => {result = {type:'error', data:err}})\r\n      return result\r\n    } catch (error) {\r\n      console.error( 'Error Create Subscription Per Month:', error);\r\n      throw error;\r\n    }\r\n};\r\n\r\nexport const UpdateSubscription = async (id, gmail, subscriptionID) => {\r\n  const data = {planType:id, email:gmail, subscriptionId: subscriptionID}\r\n  try {\r\n    let result = {type:'',data:{}};\r\n    await axios.post(endpoints.subscription.update, data)\r\n            .then(res => {result = {type:'success', data:res.data.url}})\r\n            .catch(err => {result = {type:'error',data:err}})\r\n    return result\r\n  } catch (error) {\r\n    console.error(\r\n      'Error Create Subscription Per Month:', error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const CancelSubscription = async (gmail, id) => {\r\n  try {\r\n    let result = {type:'',data:{}};\r\n    await axios.post(endpoints.subscription.cancel, {email:gmail, subscriptionId:id})\r\n            .then(res => {result = {type:'success', data:'free'}})\r\n            .catch(err => {result = {type:'error',data:err}})\r\n    return result\r\n  } catch (error) {\r\n    console.error(\r\n      'Error Create Subscription Per Month:', error\r\n    );\r\n    throw error;\r\n  }\r\n};","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport Subscription from 'src/sections/Security/subscription/subscription';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Page() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Subscription</title>\r\n      </Helmet>\r\n\r\n      <Subscription />\r\n    </>\r\n  );\r\n}"],"names":["Subscription","settings","useSettingsContext","theme","useTheme","user","setSubscription","useAuthContext","handleSubscribe","async","subscription","planType","subscriptionID","window","confirm","gmail","id","result","type","data","axios","post","endpoints","cancel","email","subscriptionId","then","res","catch","err","error","console","CancelSubscription","toast","success","warn","response","update","url","UpdateSubscription","location","href","create","CreateSubscription","_jsx","Container","maxWidth","themeStretch","children","Box","sx","borderRadius","height","bgcolor","themes","alpha","palette","grey","border","concat","divider","_jsxs","minHeight","display","flexDirection","alignItems","textAlign","p","Typography","variant","mb","gridTemplateColumns","xs","md","gap","width","plans","map","plan","Card","boxShadow","stripePlanType","primary","dark","color","contrastText","CardContent","justifyContent","pb","title","subtitle","Button","price","pt","allFeatures","item","index","features","includes","xmlns","viewBox","stripePriceId","main","fill","fillRule","d","clipRule","component","mt","startIcon","onClick","Page","_Fragment","Helmet"],"sourceRoot":""}