{"version":3,"file":"static/js/228.a4bad530.chunk.js","mappings":"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","sources":["sections/Security/subscription/subscription.js","api/stripe.js","pages/security/subscription.js"],"sourcesContent":["import React from 'react'\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport { Box, Typography, Button, Card, CardContent, Container } from \"@mui/material\";\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport {toast } from 'react-toastify';\r\nimport { useSettingsContext } from 'src/components/settings';\r\nimport { allFeatures, plans } from 'src/utils/variable';\r\nimport { useAuthContext } from 'src/auth/hooks';\r\nimport { CancelSubscription, CreateSubscription, UpdateSubscription } from 'src/api/stripe';\r\n\r\nconst Subscription = () => {\r\n  const settings = useSettingsContext();\r\n  const theme = useTheme()\r\n  const {user, setSubscription} = useAuthContext() \r\n  \r\n  const handleSubscribe = async (priceId) => {\r\n    // if plan equals Free,it need create subscription, or not, it need update \r\n    if (user.subscription !== priceId) {\r\n      if(user.subscription === \"price_1R0Xe902EF3FQcIQvGKOMZ9S\") {\r\n        const flag = window.confirm('Do you really Create plan?')\r\n        if(flag) {\r\n          const response = await CreateSubscription(priceId, user.email);\r\n          if(response.type === \"success\") {\r\n            toast.success('go next step!', {theme: \"colored\"});\r\n            window.location.href = response.data\r\n          }else {\r\n            toast.warn('Create subscripton error!', {theme: \"colored\"})\r\n            console.log(response.data)\r\n          }\r\n        }\r\n      } else if(priceId === \"price_1R0Xe902EF3FQcIQvGKOMZ9S\") {\r\n        const flag = window.confirm('Do you really cancel plan?')\r\n        if(flag) {\r\n          const response = await CancelSubscription(user.email)\r\n          if(response.type === \"success\") {\r\n            toast.success(\"You successfully Canceled Subscription!\", {theme:\"colored\"})\r\n            await setSubscription?.(\"price_1R0Xe902EF3FQcIQvGKOMZ9S\", user)          \r\n          } else {\r\n            toast.warn(\"Cancel Subscription error!\",{theme:\"colored\"})\r\n          }\r\n        }\r\n      } else {\r\n        const flag = window.confirm('Do you really Update plan?')\r\n        if(flag) {\r\n          const response = await UpdateSubscription(priceId, user.email);\r\n          if(response.type === \"success\") {\r\n            toast.success(\"You successfully Upgraded Subscription!\",{theme: \"colored\"});\r\n            await setSubscription?.(response.data, user)          \r\n          }else {\r\n            toast.warn('Update subscripton error!', {theme: \"colored\"})\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast.warn('This plan already choosen!', {theme: \"colored\"})\r\n    }\r\n  };\r\n  return (\r\n    <Container maxWidth={settings.themeStretch ? false : 'xl'}>\r\n      <Box\r\n        sx={{\r\n          borderRadius: 2, height:\"100%\",\r\n          bgcolor: (themes) => alpha(themes.palette.grey[500], 0.04),\r\n          border: (themes) => `dashed 1px ${themes.palette.divider}`,\r\n        }}\r\n      >\r\n        <Box sx={{ minHeight: \"100%\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\", textAlign: \"center\", p: 5}}>\r\n          <Typography variant=\"h2\" sx={{ mb: 4 }}>Choose Your Plan</Typography>\r\n          <Box sx={{ display: \"grid\", gridTemplateColumns: { xs: \"1fr\", md: \"repeat(3, 1fr)\" }, gap: 4, width: \"100%\" }}>\r\n            {plans.map((plan) => (\r\n              <Card \r\n                key={plan.title} \r\n                sx={{ \r\n                  p: 4, borderRadius: \"1rem\", textAlign: \"center\", boxShadow: 3, \r\n                  bgcolor: user.subscription === plan.stripePriceId ? theme.palette.primary.dark : \"background.paper\",\r\n                  color: user.subscription === plan.stripePriceId ? theme.palette.primary.contrastText : \"inherit\"\r\n                }}\r\n              >\r\n                <CardContent>\r\n                  <Typography variant=\"h2\" sx={{ mb: 2 }}>{plan.title}</Typography>\r\n                  <Typography variant=\"h3\" color=\"primary\" sx={{ mb: 3 }}>{plan.price}</Typography>\r\n                  <Box>\r\n                    {allFeatures.map((item, index) => (\r\n                      <Box key={index} sx={{display:'flex', justifyContent:\"space-between\"}}>\r\n                        <Typography sx={{ mb: 1 }} variant='h6'>{item}</Typography>\r\n                        {plan.features.includes(item) ? \r\n                          (\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" color={plan.stripePriceId === user.subscription ? null : `${theme.palette.primary.main}` }>\r\n                              <path fill=\"currentColor\" fillRule=\"evenodd\" d=\"M11.467 3.727c.289.189.37.576.181.865l-4.25 6.5a.625.625 0 0 1-.944.12l-2.75-2.5a.625.625 0 0 1 .841-.925l2.208 2.007l3.849-5.886a.625.625 0 0 1 .865-.181\" clipRule=\"evenodd\"/>\r\n                            </svg>\r\n                          ) : null\r\n                        }\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                  <Button \r\n                    variant=\"contained\" color=\"primary\" \r\n                    component=\"label\" sx={{ mt: 3 }}\r\n                    startIcon={<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" color={`${theme.palette.primary.main}`}><path fill=\"#005a92\" d=\"M13.4 20.7a4.81 4.81 0 0 0 1.251-6.683l-3.963 2.712a2.4 2.4 0 0 1-2.712-3.971l3.621-2.479l2.324-1.593A4.81 4.81 0 0 0 15.168 2L11.2 4.72L5.259 8.784l-.008.008A7.212 7.212 0 0 0 13.4 20.7m5.21-9.4a.1.1 0 0 0-.031.023za4.81 4.81 0 0 0-1.251 6.683l3.963-2.712a2.407 2.407 0 0 1 2.72 3.971l-3.621 2.479l-2.331 1.596A4.81 4.81 0 0 0 16.838 30l3.962-2.712l5.945-4.072A7.213 7.213 0 0 0 18.61 11.3\"/></svg>} \r\n                    onClick={() => handleSubscribe(plan.stripePriceId)}\r\n                  >\r\n                    Subscribe\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Subscription","import axios, { endpoints } from 'src/utils/axios';\r\n\r\nexport const CreateSubscription = async (id,gmail) => {\r\n    const data = {priceId:id, email:gmail}\r\n    try {\r\n      let result = {type:'', data: {}}\r\n      await axios.post(endpoints.subscription.create, data)\r\n              .then(res => {result = {type:'success', data:res.data.url}})\r\n              .catch(err => {result = {type:'error', data:err}})\r\n      return result\r\n    } catch (error) {\r\n      console.error( 'Error Create Subscription Per Month:', error);\r\n      throw error;\r\n    }\r\n};\r\n\r\nexport const GetSubscription = async (gmail) => {\r\n  try {\r\n    let result = {type: '', data: {}}\r\n    await axios.post(endpoints.subscription.get, {email: gmail})\r\n            .then(res => {result = {type: 'success', data: res.data.plan}})\r\n            .catch(err => {result = {type: 'error', data: err}})\r\n    return result\r\n  } catch (error) {\r\n    console.error(\r\n      'Error fetching Revenue:',error\r\n    );\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const UpdateSubscription = async (id, gmail) => {\r\n  const data = {priceId:id, email:gmail}\r\n  try {\r\n    let result = {type:'',data:{}};\r\n    await axios.post(endpoints.subscription.update, data)\r\n            .then(res => {result = {type:'success', data:res.data.subscription}})\r\n            .catch(err => {result = {type:'error',data:err}})\r\n    return result\r\n  } catch (error) {\r\n    console.error(\r\n      'Error Create Subscription Per Month:', error\r\n    );\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const CancelSubscription = async (gmail) => {\r\n  try {\r\n    let result = {type:'',data:{}};\r\n    await axios.post(endpoints.subscription.cancel, {email:gmail})\r\n            .then(res => {result = {type:'success', data:'price_123'}})\r\n            .catch(err => {result = {type:'error',data:err}})\r\n    return result\r\n  } catch (error) {\r\n    console.error(\r\n      'Error Create Subscription Per Month:', error\r\n    );\r\n    throw error;\r\n  }\r\n};","import { Helmet } from 'react-helmet-async';\r\n// sections\r\nimport Subscription from 'src/sections/Security/subscription/subscription';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Page() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Subscription</title>\r\n      </Helmet>\r\n\r\n      <Subscription />\r\n    </>\r\n  );\r\n}"],"names":["Subscription","settings","useSettingsContext","theme","useTheme","user","setSubscription","useAuthContext","handleSubscribe","async","subscription","priceId","window","confirm","response","id","gmail","data","email","result","type","axios","post","endpoints","create","then","res","url","catch","err","error","console","CreateSubscription","toast","success","location","href","warn","log","cancel","CancelSubscription","update","UpdateSubscription","_jsx","Container","maxWidth","themeStretch","children","Box","sx","borderRadius","height","bgcolor","themes","alpha","palette","grey","border","concat","divider","_jsxs","minHeight","display","flexDirection","alignItems","textAlign","p","Typography","variant","mb","gridTemplateColumns","xs","md","gap","width","plans","map","plan","Card","boxShadow","stripePriceId","primary","dark","color","contrastText","CardContent","title","price","allFeatures","item","index","justifyContent","features","includes","xmlns","viewBox","main","fill","fillRule","d","clipRule","Button","component","mt","startIcon","onClick","Page","_Fragment","Helmet"],"sourceRoot":""}